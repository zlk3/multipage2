/* Select readable font and text/background colors with good contrast. To search for different Google Fonts, go to https://www.w3schools.com/howto/howto_google_fonts.asp */

body, html {
    height: 100%;
    margin: 0;
    font-family: roboto;
    color: black;
    background-color: white;
  }  

.hero-image {
/* This selector controls the "hero image" class. You may need to change "hero.jpg" name/format to match your asset, or vice-versa */
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("hero.jpg");
    height: 100%;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
  }

/* This selector places text in the middle of the image */
.hero-text {
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

/* The next two selectors control hero-text font properties. 2em is 2x inherited font-size value. 5 em is 5x stated value. */
.hero-text h1 {
    font-family: inherit;
    font-size: 10em;
    color: white;
  }

.hero-text h2 {
    font-family: inherit;
    font-size: 2em;
    color: white;
  }
  

 /* The text-block class selector controls the text-box on screens >800px. You will also need to adjust values in the next text-box selector. */
.text-block {
    display: block;
    width: 55%;
    background-color: inherit;
    padding: 0px;
    border: 0px solid black;
    margin-top: 100px;
    margin-bottom: 100px;
    margin-left: auto;
    margin-right: auto;
    font-family: inherit;
    font-size: 1.5em;
    color: inherit;
  }

 /* This code helps your text-block scale for screens â‰¤800px. */
  @media screen and (max-width: 800px) {
    .text-block {  
        display: block;
        width: 90%;
        background-color: inherit;
        padding: 0px;
        border: 0px solid black;
        margin-top: 100px;
        margin-bottom: 100px;
        margin-left: auto;
        margin-right: auto;
        font-family: inherit;
        font-size: 1.25em;
        color: inherit;
    }
  }


 /* The pull-quote class selector uses large text and border top/bottom properties.  */
.pull-quote {
    display: block;
    width: 70%;
    background-color: inherit;
    padding-left: 20px;
    padding-right: 20px;
    border-top: 3px solid #000;
    border-bottom: 3px solid #000;
    margin-top: 100px;
    margin-bottom: 100px;
    margin-left: auto;
    margin-right: auto;
    font: inherit;
    font-size: 1em;
    color: inherit;
  }


/* - Bulleted Points or List -
Unordered list element selector. Change unordered list from disc (default) to circle, square, or none. */
ul {
    list-style-type: default;
    padding-left: none;
    font: inherit;
    font-size: 1em;
    line-height: 2.2;
    color: inherit;
  }

/* Ordered list element selector. Change ordered list to upper-roman or lower-alpha. */
ol {
    list-style-type: default;
    padding-left: none;
    font: inherit;
    font-size: 1em;
    line-height: 2.2;
    color: inherit;
  }


/* - Link that Looks Like a Button -
Button-box class selector uses Flex Box Design (flex display) to scale the element in one dimension. */
.button-box {
    display: flex;
    height: 200px;
    border: 0px solid #;
    align-items: center;
    justify-content: center;
  }

/* Change button colors and other attributes here. */
.button {
    display: inline-block;
    background-color: #FFD700;
    padding: 15px 32px;
    border: none;
    cursor: pointer;
    font: inherit;
    font-size: 16px;
    color: rgb(18, 15, 15);
    text-align: center;
  }

/* Hover effect improves accessibility. */
.button:hover {
    background-color: #008cff;
  }


/* - CSS Flexbox Layout -
CSS Flexbox creates responsive layouts for images, text, and other content. Reuse .column class to create additional grids with different proportions for specific content */

.flexbox-container {
  padding-top: 100px;
  padding-bottom: 100px;
  text-align: center;
 }

.row {
   display: flex;
   flex-wrap: wrap;
   padding: 0 4px;
   justify-content: center;
 }

/* Change max-width value depending on number of columns. */
.column {
   flex: 25%;
   max-width: 25%;
   padding: 0 4px;
 }

.column img  {
   margin-top: 8px;
   vertical-align: middle;
   width: 100%;
 }

/* CSS Grid Responsive layout - makes grid a one column-layout instead of two or three columns */
@media screen and (max-width: 800px) {
.column {
       flex: 75%;
       max-width: 75%;
   }
 }

 
/* - Frame class selector -
Use CSS box model to style image content. Adjust frame/filter class selector properties to customize. Copy, paste, rename class selector to quickly create alternative image stylings. */
.frame {
    display: block;
    background: blue;
    padding: 5px;
    border: 5px solid gold;
    border-radius: 3%;
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: auto;
    margin-right: auto;
    filter: grayscale(%);
    filter: blur(px);
    filter: hue-rotate(deg);
}


/* - Polaroid - 
Polaroid class selector and container. Adjust Polaroid width here. */
.polaroid {
    display: block;
    width: 50%;
    background-color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    margin-left: auto;
    margin-right: auto;
    margin-top: none;
    margin-bottom: none;
  }

.polaroid img {
    width: 100%;  /* Keep 100% */
    filter: grayscale(%);
    filter: blur(px);
    filter: hue-rotate(deg);
  }

.polaroid-caption {
    text-align: center;
    padding: 10px 20px;
  }


/*  - Image Container with Text Box -
Add text to your image and control text-box location*/
.image-container {
  display: block;
  position: relative;
  width: 90%;
  margin-top: 100px;
  margin-bottom:100px;
  margin-left: auto;
  margin-right: auto;
}

.image-container img {
  width: 100%;   /* Keep 100%. Add Filters.*/
}

.image-container-text {
  position: absolute;
  /*Using max-with property with pixels will prevent a left aligned box from over-scrolling*/
  max-width: 300px;
  /*Change location right/left and top/bottom. To center use top 50% left 50% */
  bottom: 20px;
  right: 20px;
  /*Using rgba (red,blue,green, alpha) allows us to control color and opacity. For a white tinted text box, use 255, 255, 255, .3 */
  background-color: rgba(0, 0, 0, .3);
  color: white;
  padding-left: 20px;
  padding-right: 20px;
  font-family: inherit;
  font-size: inherit;
}


/*  - Parallax -
This code controls that cool parallax image and scrolling effect. Change the image "parallax.jpg" below to match your asset.*/
.parallax {
    background-image: url("parallax.jpg");
/* Set a specific height */
    height: 500px;
/* control the parallax scrolling effect */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    margin-top: 100px;
    margin-bottom: 0px;
  }

/* This code stops the parallax image and scrolling effect for small screens--at the moment, iPhones just don't like it.*/
@media screen and (max-width: 768px) {
    .parallax {
		    background-attachment: inherit;
        height: 400px;
	  }
  }


/*  - YouTube Video -
Uses container to control video across different screen sizes. */
.video {
    width: 75%;
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 100px;
    padding-bottom: 100px;
    margin: auto;
    text-align: center;
  }

.video-container {
  	position:relative;
    height:0;
  	overflow:hidden;
  	padding-bottom:56.25%;
  	padding-top:30px;
  }

.video-container iframe, .video-container object, .video-container embed {
  	position:absolute;
  	top:0;
  	left:0;
  	width:100%;
  	height:100%;
  }

  @media screen and (max-width: 800px) {
    .video {
        width: 90%;
        margin-top: 100px;
        margin-bottom: 100px;
    }
  }


/*  - Caption -
Style caption left, center, justify, right. */
.caption {
    display: block;
    padding: none;
    border: none;
    margin: none;
    text-align: center;
  }


/*  - Logo -
Logo width controlled inline */
.logo {
    display: block;
    padding: 10px;
    border: 0px solid black;
    margin-top: 200px;
    margin-bottom: 0px;
    margin-left: auto;
    margin-right: auto;
    font: inherit;
    font-size: 12pt;
    text-align: center;
  }


/*  - Footer -
Add a Copyright */
.footer {
    border: none;
    padding: 10px;
    margin: auto;
    font: inherit;
    font-size: inherit;
    text-align: center;    
  }

/* Page-specific: SupportActressComedy flip-box & layout */
.support-actress-page .hover-preview { position: fixed; pointer-events: none; display: none; z-index: 9999; }
.support-actress-page .hover-preview img { max-width: 180px; max-height: 180px; border-radius: 6px; box-shadow: 0 6px 18px rgba(0,0,0,0.25); border: 2px solid #fff; }
@media (max-width:600px){ .support-actress-page .hover-preview img { max-width: 120px; max-height: 120px; } }

.support-actress-page .flip-box { background-color: transparent; width: 260px; height: 220px; border: 1px solid #f1f1f1; perspective: 1000px; border-radius:6px; overflow:hidden; }
.support-actress-page .flip-box-inner { position: relative; width: 100%; height: 100%; text-align: center; transition: transform 0.6s; transform-style: preserve-3d; }
.support-actress-page .flip-box:hover .flip-box-inner, .support-actress-page .flip-box:focus-within .flip-box-inner { transform: rotateY(180deg); }
.support-actress-page .flip-box-front, .support-actress-page .flip-box-back { position: absolute; width: 100%; height: 100%; -webkit-backface-visibility: hidden; backface-visibility: hidden; display:flex; flex-direction:column; align-items:center; justify-content:flex-start; padding:8px; box-sizing:border-box; }
.support-actress-page .flip-box-front { background-color: #fff; color: black; }
.support-actress-page .flip-box-front img,
.flip-box-front img {
  width: 100%;
  aspect-ratio: 2 / 1; /* maintain consistent width:height ratio */
  height: auto;
  object-fit: cover;
  display: block;
  border-bottom: 1px solid #eee;
}
.support-actress-page .flip-box-back { background-color: #1e90ff; color: white; transform: rotateY(180deg); display:flex; align-items:center; justify-content:center; padding:12px; }
.support-actress-page .flip-box-back p{ margin:0; }
.support-actress-page .flip-grid { display:flex; flex-wrap:wrap; gap:18px; justify-content:center; align-items:flex-start; margin-top:1rem; padding: 0 10px; }
@media (max-width:700px){ .support-actress-page .flip-box{ width:45%; } }
@media (max-width:700px){ .flip-box-front img { aspect-ratio: 1.8 / 1; } }
@media (max-width:420px){ .flip-box-front img { aspect-ratio: 1.6 / 1; } }
@media (max-width:420px){ .support-actress-page .flip-box{ width:100%; } }

.support-actress-page .page-container { max-width: 1100px; margin: 2rem auto; padding: 1rem; }
.support-actress-page .winner { text-align:center; margin-bottom:1.25rem; }
.support-actress-page .winner img { max-width: 60%; height: auto; border-radius: 6px; display:block; margin: .5rem auto; }
.support-actress-page .section-title { text-align:center; margin-top:1.5rem; }

/* Sparkle effect for ComedyHome buttons (scoped) */
.comedy-home .button { position: relative; overflow: hidden; }
.comedy-home .button::after {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background-image: radial-gradient(circle at 20% 20%, rgba(255,255,255,0.9) 0 6px, rgba(255,255,255,0.2) 6px 12px, transparent 12px), radial-gradient(circle at 80% 80%, rgba(255,255,255,0.8) 0 4px, rgba(255,255,255,0.15) 4px 10px, transparent 10px);
  background-repeat: no-repeat;
  transform: translate(-110%, -110%) rotate(25deg) scale(0.6);
  opacity: 0;
  pointer-events: none;
}
.comedy-home .button.sparkle::after { animation: sparkle 1.6s ease-in-out forwards; }

/* Polaroid-style button for the main Comedy link */
.polaroid-button {
  display: inline-block;
  width: 180px;
  height: 220px;
  background-image: url('pgrid38.jpg');
  background-size: cover;
  background-position: center;
  border: 12px solid #fff;
  box-shadow: 0 10px 30px rgba(0,0,0,0.35);
  transform: rotate(-3deg);
  text-decoration: none;
  color: #111;
  position: relative;
  overflow: visible;
}
.polaroid-button .label {
  position: absolute;
  bottom: 8px;
  left: 0;
  right: 0;
  text-align: center;
  font-weight: bold;
  background: rgba(255,255,255,0.85);
  margin: 0 12px; /* keep within white border */
  padding: 6px 8px;
  border-radius: 4px;
}
.polaroid-button:focus { outline: 3px solid rgba(66,133,244,0.6); }

@media (max-width:600px){ .polaroid-button { width: 140px; height: 180px; border-width:10px; } }
@keyframes sparkle {
  0% { transform: translate(-110%, -110%) rotate(25deg) scale(0.6); opacity: 0; }
  30% { opacity: 0.9; transform: translate(-20%, -20%) rotate(25deg) scale(0.8); }
  60% { opacity: 0.6; transform: translate(10%, 10%) rotate(25deg) scale(1); }
  100% { transform: translate(110%, 110%) rotate(25deg) scale(1.2); opacity: 0; }
}

/* Optional subtle pulse to draw attention */
/* The `.sparkle` class is added/removed by JS to trigger the animation once on click */